;; sometimes the successive behaviour depends on the previous behaviour

;; for and-gate
;; input1 from 0 to 1
;; add a agenda item to agenda,
;; at this time input2 is still 1,
;; then local variable 'new-value' is 1;

;; then input2 from 1 to 0
;; add a agenda item to agenda,
;; at this time input is 1,
;; then local variable 'new-value' is 0;

;; when by an order of LIFO, procedure propagate
;; first get the agenda item generated by wire input2,
;; then the output of and-gate is 0 now;
;; then the agenda item generated by wire input1 is processecd,
;; now the output of and-gate is 1 now.

;; the final result of and-gate is 1 after switching signals of inputs,
;; while it should be 0 according to rule of and-gate,
;; so order LIFO of agenda item is not corrcet.
